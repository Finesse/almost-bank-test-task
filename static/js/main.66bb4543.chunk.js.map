{"version":3,"sources":["constants.ts","helpers/currencyConverter.ts","redux/initialState.ts","redux/reducers.ts","redux/sagas.ts","redux/actions.ts","services/exchangeRatesSource.ts","view/components/Layout/Layout.tsx","view/components/ExchangeForm/ExchangeFormHalf.tsx","view/components/ExchangeForm/arrowRight.svg","view/components/ExchangeForm/ExchangeForm.tsx","view/components/UpdateStatus/refresh.svg","view/components/UpdateStatus/UpdateStatus.tsx","view/containers/App.tsx","helpers/react.ts","view/containers/ExchangeForm/ExchangeForm.tsx","view/containers/UpdateStatus/UpdateStatus.ts","index.tsx","redux/index.ts","view/components/UpdateStatus/UpdateStatus.module.css","view/components/Layout/Layout.module.css","view/components/ExchangeForm/ExchangeFormHalf.module.css","view/components/ExchangeForm/ExchangeForm.module.css"],"names":["exchangeRatesUpdateInterval","currencies","currencyAmountPrecision","convert","_ref","value","fromCurrency","toCurrency","baseCurrency","rates","precision","arguments","length","undefined","hasOwnProperty","baseToFromRatio","baseToToRatio","Number","toFixed","precisionFactor","Math","pow","balance","_step","_iterator","Symbol","iterator","_iteratorNormalCompletion","next","done","currency","random","round","initialState","exchangeRates","areUpdating","appReducer","state","action","type","_objectSpread2","data","sellCurrency","_action$sellAmount","sellAmount","buyCurrency","_action$buyAmount","buyAmount","convertCurrency","Error","Object","objectSpread","defineProperty","Big","sub","add","exchangeRatesReducer","updateError","lastUpdateDate","date","error","appSaga","updateExchangeRatesSaga","autoupdateExchangeRatesSaga","updateExchangeRatesActionType","dependencies","regenerator_default","a","wrap","_context","prev","takeLeading","fork","stop","_marked","this","_","fetchExchangeRates","now","_context2","call","sent","Date","put","t0","message","_marked2","_context3","delay","_marked3","floatRatesComRatesSource","asyncToGenerator","mark","_callee","response","responseData","_arr","_i","_ref3","_code","_rate","fetch","status","body","toString","json","values","code","rate","abrupt","apply","memo","children","footer","react_default","createElement","className","styles","main","props","concat","box","control","currencySelectBox","onChange","event","onCurrencySelect","target","currencySelect","allCurrencies","map","key","number_format_default","decimalScale","allowNegative","prefix","negativeAmount","amount","onAmountChange","replace","test","onFocus","onAmountFocus","amountInput","info","unit","convertRatio","oppositeCurrency","_extends","assign","i","source","prototype","arrowRight_ref","fill","d","arrowRight_SvgComponent","version","id","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","__webpack_require__","p","stage","form","onSubmit","preventDefault","canSubmit","ExchangeForm_ExchangeFormHalf","side","sellBalance","sellToBuyRatio","onSellCurrencySelect","onSellAmountChange","onSellAmountFocus","arrow","buyBalance","buyToSellRatio","onBuyCurrencySelect","onBuyAmountChange","onBuyAmountFocus","buttonSection","disabled","button","validationError","refresh_extends","refresh_ref","refresh_SvgComponent","width","height","updating","_ref$className","container","formatDate","Layout_Layout","containers_UpdateStatus_UpdateStatus","containers_ExchangeForm_ExchangeForm","useEventCallback","fn","ref","useRef","useLayoutEffect","current","toConsumableArray","useCallback","containerActions","exchange","ExchangeFormLoadedContainer","_useState","useState","_useState2","slicedToArray","setSellCurrency","_useState3","_useState4","setBuyCurrency","_useState5","_useState6","_useState6$","amountSide","setAmountAndSide","isEnoughBalance","onSellFocus","onBuyFocus","ExchangeForm_ExchangeForm","connect","isUpdating","ExchangeForm_ExchangeFormLoadedContainer","UpdateStatus","appStore","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","createAppStore","ReactDOM","render","es","containers_App","document","getElementById","module","exports","rotate"],"mappings":"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","file":"static/js/main.66bb4543.chunk.js","sourcesContent":["// In milliseconds\nexport const exchangeRatesUpdateInterval = 10000;\n\nexport const currencies = [\n  'USD',\n  'EUR',\n  'GBP',\n  'AUD',\n  'BOB',\n  'CAD',\n  'CDF',\n  'CNY',\n  'CZK',\n  'HKD',\n  'JPY',\n  'LBP',\n  'NIO',\n  'RON',\n  'RUB',\n  'SEK',\n  'SZL',\n  'UAH',\n  'UYU',\n  'VUV',\n  'XCD',\n  'YER'\n];\n\nexport const currencyAmountPrecision = 2;\n\nexport const currencyRatePrecision = 4;\n","import { currencyAmountPrecision } from '../constants';\nimport { ExchangeRatesBase } from '../types';\n\n// Works with precision defined in the constants file\n// Returns null when the pair can't be converted\nexport default function convert(\n  { baseCurrency, rates }: ExchangeRatesBase,\n  value: number,\n  fromCurrency: string,\n  toCurrency: string,\n  precision: number = currencyAmountPrecision\n): number | null {\n  if (\n    fromCurrency !== baseCurrency && !rates.hasOwnProperty(fromCurrency) ||\n    toCurrency !== baseCurrency && !rates.hasOwnProperty(toCurrency)\n  ) {\n    return null;\n  }\n\n  const baseToFromRatio = fromCurrency === baseCurrency ? 1 : rates[fromCurrency];\n  const baseToToRatio = toCurrency === baseCurrency ? 1 : rates[toCurrency];\n\n  if (baseToFromRatio === 0) {\n    return null;\n  }\n\n  const convertedValue = value / baseToFromRatio * baseToToRatio;\n  \n  return Number(convertedValue.toFixed(precision));\n}\n","import { ReduxState } from './types';\nimport { currencies, currencyAmountPrecision } from '../constants';\n\nconst precisionFactor = 10 ** currencyAmountPrecision;\nconst balance: ReduxState['balance'] = {};\n\n// Give some money to new users\nfor (const currency of currencies) {\n  const value = 100 + 9900 * Math.random();\n  balance[currency] = Math.round(value * precisionFactor) / precisionFactor;\n}\n\nconst initialState: ReduxState = {\n  exchangeRates: {\n    areUpdating: false\n  },\n  balance\n};\n\nexport default initialState;\n","import Big from 'big.js';\nimport convertCurrency from '../helpers/currencyConverter';\nimport { ReduxState, Action } from './types';\nimport initialState from './initialState';\n\nexport default function appReducer(state: ReduxState = initialState, action: Action): ReduxState {\n  switch (action.type) {\n    case 'EXCHANGE': {\n      if (state.exchangeRates.data === undefined) {\n        return state;\n      }\n\n      let { sellCurrency, sellAmount = null, buyCurrency, buyAmount = null } = action;\n      if (sellCurrency === buyCurrency) {\n        return state;\n      }\n\n      if (sellAmount !== null) {\n        buyAmount = convertCurrency(state.exchangeRates.data, sellAmount, sellCurrency, buyCurrency);\n        if (buyAmount === null) {\n          return state;\n        }\n      } else if (buyAmount !== null) {\n        sellAmount = convertCurrency(state.exchangeRates.data, buyAmount, buyCurrency, sellCurrency);\n        if (sellAmount === null) {\n          return state;\n        }\n      } else {\n        throw new Error('Either sell or buy amount must be set');\n      }\n\n      // The available balance is not checked because it is done in the React components and it may be OK to put user in debt\n      return {\n        ...state,\n        balance: {\n          ...state.balance,\n          [sellCurrency]: Number(Big(state.balance[sellCurrency] || 0).sub(sellAmount).toFixed()),\n          [buyCurrency]: Number(Big(state.balance[buyCurrency] || 0).add(buyAmount).toFixed())\n        }\n      };\n    }\n    default:\n      return {\n        ...state,\n        exchangeRates: exchangeRatesReducer(state.exchangeRates, action)\n      };\n  }\n}\n\nfunction exchangeRatesReducer(state: ReduxState['exchangeRates'], action: Action): ReduxState['exchangeRates'] {\n  switch (action.type) {\n    case 'UPDATE_EXCHANGE_RATES':\n      return {\n        ...state,\n        areUpdating: true,\n        updateError: undefined\n      };\n    case 'UPDATE_EXCHANGE_RATES_SUCCESS':\n      return {\n        ...state,\n        areUpdating: false,\n        updateError: undefined,\n        data: action.exchangeRates,\n        lastUpdateDate: action.date\n      };\n    case 'UPDATE_EXCHANGE_RATES_FAIL':\n      return {\n        ...state,\n        areUpdating: false,\n        updateError: action.error\n      };\n    default:\n      return state;\n  }\n}\n","import { takeLeading, call, put, fork, delay } from 'redux-saga/effects';\nimport * as actions from './actions';\nimport { SagasDependencies, UpdateExchangeRatesAction } from './types';\nimport { ExchangeRatesBase } from '../types';\nimport { exchangeRatesUpdateInterval } from '../constants';\n\nconst updateExchangeRatesActionType: UpdateExchangeRatesAction['type'] = 'UPDATE_EXCHANGE_RATES';\n\nexport default function* appSaga(dependencies: SagasDependencies) {\n  yield takeLeading(updateExchangeRatesActionType, updateExchangeRatesSaga, dependencies);\n  yield fork(autoupdateExchangeRatesSaga);\n}\n\nexport function* updateExchangeRatesSaga({ fetchExchangeRates }: SagasDependencies, _: UpdateExchangeRatesAction) {\n  try {\n    const rates: ExchangeRatesBase = yield call(fetchExchangeRates);\n    const now: number = yield call([Date, 'now']);\n    yield put(actions.updateExchangeRatesSuccess(rates, now));\n  } catch (error) {\n    yield put(actions.updateExchangeRatesFail(error.message));\n  }\n}\n\nexport function* autoupdateExchangeRatesSaga() {\n  while (true) {\n    yield put(actions.updateExchangeRates());\n    yield delay(exchangeRatesUpdateInterval);\n  }\n}\n","import * as Types from './types';\nimport { ExchangeRatesBase } from '../types';\n\nexport function updateExchangeRates(): Types.UpdateExchangeRatesAction {\n  return { type: 'UPDATE_EXCHANGE_RATES' };\n}\n\nexport function updateExchangeRatesSuccess(\n  exchangeRates: ExchangeRatesBase,\n  date: number, // When the update was performed; unix ms\n): Types.UpdateExchangeRatesSuccessAction {\n  return { type: 'UPDATE_EXCHANGE_RATES_SUCCESS', exchangeRates, date };\n}\n\nexport function updateExchangeRatesFail(error: string): Types.UpdateExchangeRatesFailAction {\n  return { type: 'UPDATE_EXCHANGE_RATES_FAIL', error };\n}\n\nexport function exchange(\n  sellCurrency: string, \n  sellAmount: number | undefined, \n  buyCurrency: string,\n  buyAmount: number | undefined\n): Types.ExchangeAction {\n  return { type: 'EXCHANGE', sellCurrency, sellAmount, buyCurrency, buyAmount };\n}\n","import { ExchangeRatesBase, RatesSource } from '../types';\n\ninterface FloatRatesComResponse {\n  [currency: string]: {\n    code: string;\n    alphaCode: string;\n    numericCode: number;\n    name: string;\n    rate: number; // How much base units the currency costs\n    date: string; // E.g. Fri, 15 Feb 2019 12:00:01 GMT\n    inverseRate: number;\n  };\n}\n\n/**\n * Gets exchange rates from the FloatRates.com website\n */\nexport const floatRatesComRatesSource: RatesSource = async () => {\n  const response = await fetch('https://www.floatrates.com/daily/usd.json');\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(response.body && response.body.toString() || 'Unknown error in a FloatRates.com client');\n  }\n\n  const responseData: FloatRatesComResponse = await response.json();\n  const rates: ExchangeRatesBase['rates'] = {};\n\n  for (const { code, rate } of Object.values(responseData)) {\n    rates[code] = rate;\n  }\n\n  return { baseCurrency: 'USD', rates };\n};\n","import React, { memo } from 'react';\nimport styles from './Layout.module.css';\n\ninterface Props {\n  children?: React.ReactNode;\n  footer?: React.ReactNode;\n}\n\nexport default memo(function Layout({ children, footer }: Props) {\n  return (\n    <div className={styles.body}>\n      <main className={styles.main}>\n        {children}\n      </main>\n      {footer && (\n        <footer className={styles.footer}>\n          {footer}\n        </footer>\n      )}\n    </div>\n  );\n});\n","import React, { memo } from 'react';\nimport NumberFormat from 'react-number-format';\nimport { currencyAmountPrecision } from '../../../constants';\nimport styles from './ExchangeFormHalf.module.css';\n\ninterface Props {\n  allCurrencies: string[];\n  currency: string;\n  oppositeCurrency: string;\n  amount: number | null;\n  balance: number;\n  convertRatio: number | null;\n  negativeAmount?: boolean;\n  className?: string;\n  onCurrencySelect(currency: string): any;\n  onAmountChange(amount: number | null): any;\n  onAmountFocus(): any;\n}\n\nfunction valueToNumber(value: string): number | null {\n  value = value.replace(/[^\\d.]+/g, '');\n  return /[0-9]/.test(value) ? Number(value) : null;\n}\n\nfunction ExchangeFormHalf(props: Props) {\n  return (\n    <div className={`${styles.box} ${props.className || ''}`}>\n      <div className={styles.control}>\n        <label className={styles.currencySelectBox}>\n          <select\n            value={props.currency}\n            onChange={event => props.onCurrencySelect(event.target.value)}\n            className={styles.currencySelect}\n          >\n            {props.allCurrencies.map(currency => (\n              <option value={currency} key={currency}>{currency}</option>\n            ))}\n          </select>\n        </label>\n        <NumberFormat\n          // type=\"tel\" is not used because the iOS phone keyboard doesn't have a dot or a comma\n          decimalScale={currencyAmountPrecision}\n          allowNegative={false}\n          prefix={props.negativeAmount ? '−' : '+'}\n          value={props.amount === null ? '' : props.amount}\n          onChange={event => props.onAmountChange(valueToNumber(event.target.value))} // The `onValueChange` is not used because it fires an event when the value is changed by props too\n          onFocus={props.onAmountFocus}\n          className={styles.amountInput}\n        />\n      </div>\n      <div className={styles.info}>\n        <div>\n          You have {props.balance} <span className={styles.unit}>{props.currency}</span>\n        </div>\n        {props.convertRatio !== null && (\n          <div>\n            1 <span className={styles.unit}>{props.currency}</span>\n            {' ≈ '}\n            {props.convertRatio} <span className={styles.unit}>{props.oppositeCurrency}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(ExchangeFormHalf);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#010002\",\n  d: \"M51.707,185.343c-2.741,0-5.493-1.044-7.593-3.149c-4.194-4.194-4.194-10.981,0-15.175 l74.352-74.347L44.114,18.32c-4.194-4.194-4.194-10.987,0-15.175c4.194-4.194,10.987-4.194,15.18,0l81.934,81.934 c4.194,4.194,4.194,10.987,0,15.175l-81.934,81.939C57.201,184.293,54.454,185.343,51.707,185.343z\"\n})));\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    version: 1.1,\n    id: \"Capa_1\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 185.343 185.343\",\n    style: {\n      \"enableBackground\": \"new 0 0 185.343 185.343\"\n    },\n    xmlSpace: \"preserve\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/arrowRight.35b05fb9.svg\";\nexport { SvgComponent as ReactComponent };","import React, { memo } from 'react';\nimport ExchangeFormHalf from './ExchangeFormHalf';\nimport styles from './ExchangeForm.module.css';\nimport { ReactComponent as ArrowIcon } from './arrowRight.svg';\n\ninterface CommonProps {\n  className?: string;\n}\n\ninterface LoadingProps {\n  stage: 'loading';\n}\n\ninterface ErrorProps {\n  stage: 'error';\n  error: string;\n}\n\ninterface ReadyProps {\n  stage: 'ready'\n  currencies: string[];\n  sellCurrency: string;\n  buyCurrency: string;\n  sellAmount: number | null;\n  buyAmount: number | null;\n  sellBalance: number;\n  buyBalance: number;\n  sellToBuyRatio: number | null;\n  buyToSellRatio: number | null;\n  canSubmit: boolean;\n  validationError?: React.ReactNode;\n  onSellCurrencySelect(currency: string): any;\n  onBuyCurrencySelect(currency: string): any;\n  onSellAmountChange(amount: number | null): any;\n  onBuyAmountChange(amount: number | null): any;\n  onSellAmountFocus(): any;\n  onBuyAmountFocus(): any;\n  onSubmit(): any;\n}\n\ntype Props = CommonProps & (ErrorProps | LoadingProps | ReadyProps);\n\nfunction ExchangeForm(props: Props) {\n  if (props.stage === 'loading') {\n    return <div className={`${styles.message} ${props.className || ''}`}>Loading the data...</div>;\n  }\n\n  if (props.stage === 'error') {\n    return <div className={`${styles.message} ${props.className || ''}`}>Error: {props.error}</div>;\n  }\n\n  return (\n    <form\n      className={`${styles.form} ${props.className || ''}`}\n      onSubmit={event => {\n        event.preventDefault();\n        if (props.canSubmit) {\n          props.onSubmit();\n        }\n      }}\n    >\n      <ExchangeFormHalf\n        className={styles.side}\n        allCurrencies={props.currencies}\n        currency={props.sellCurrency}\n        oppositeCurrency={props.buyCurrency}\n        amount={props.sellAmount}\n        balance={props.sellBalance}\n        convertRatio={props.sellToBuyRatio}\n        onCurrencySelect={props.onSellCurrencySelect}\n        onAmountChange={props.onSellAmountChange}\n        onAmountFocus={props.onSellAmountFocus}\n        negativeAmount\n      />\n      <ArrowIcon className={styles.arrow} />\n      <ExchangeFormHalf\n        className={styles.side}\n        allCurrencies={props.currencies}\n        currency={props.buyCurrency}\n        oppositeCurrency={props.sellCurrency}\n        amount={props.buyAmount}\n        balance={props.buyBalance}\n        convertRatio={props.buyToSellRatio}\n        onCurrencySelect={props.onBuyCurrencySelect}\n        onAmountChange={props.onBuyAmountChange}\n        onAmountFocus={props.onBuyAmountFocus}\n      />\n      <div className={styles.buttonSection}>\n        <button disabled={!props.canSubmit} className={styles.button}>Exchange</button>\n        {props.validationError && (\n          <div className={styles.validationError}>{props.validationError}</div>\n        )}\n      </div>\n    </form>\n  );\n}\n\nexport default memo(ExchangeForm);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M55.323,203.641c15.664,0,29.813-9.405,35.872-23.854c25.017-59.604,83.842-101.61,152.42-101.61 c37.797,0,72.449,12.955,100.23,34.442l-21.775,3.371c-7.438,1.153-13.224,7.054-14.232,14.512 c-1.01,7.454,3.008,14.686,9.867,17.768l119.746,53.872c5.249,2.357,11.33,1.904,16.168-1.205 c4.83-3.114,7.764-8.458,7.796-14.208l0.621-131.943c0.042-7.506-4.851-14.144-12.024-16.332 c-7.185-2.188-14.947,0.589-19.104,6.837l-16.505,24.805C370.398,26.778,310.1,0,243.615,0C142.806,0,56.133,61.562,19.167,149.06 c-5.134,12.128-3.84,26.015,3.429,36.987C29.865,197.023,42.152,203.641,55.323,203.641z\"\n}), React.createElement(\"path\", {\n  d: \"M464.635,301.184c-7.27-10.977-19.558-17.594-32.728-17.594c-15.664,0-29.813,9.405-35.872,23.854 c-25.018,59.604-83.843,101.61-152.42,101.61c-37.798,0-72.45-12.955-100.232-34.442l21.776-3.369 c7.437-1.153,13.223-7.055,14.233-14.514c1.009-7.453-3.008-14.686-9.867-17.768L49.779,285.089 c-5.25-2.356-11.33-1.905-16.169,1.205c-4.829,3.114-7.764,8.458-7.795,14.207l-0.622,131.943 c-0.042,7.506,4.85,14.144,12.024,16.332c7.185,2.188,14.948-0.59,19.104-6.839l16.505-24.805 c44.004,43.32,104.303,70.098,170.788,70.098c100.811,0,187.481-61.561,224.446-149.059 C473.197,326.043,471.903,312.157,464.635,301.184z\"\n})));\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    version: 1.1,\n    id: \"Capa_1\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"487.23px\",\n    height: \"487.23px\",\n    viewBox: \"0 0 487.23 487.23\",\n    style: {\n      \"enableBackground\": \"new 0 0 487.23 487.23\"\n    },\n    xmlSpace: \"preserve\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/refresh.7ac731f3.svg\";\nexport { SvgComponent as ReactComponent };","import React, { memo } from 'react';\nimport { format as formatDate } from 'date-fns';\nimport styles from './UpdateStatus.module.css';\nimport { ReactComponent as RefreshIcon } from './refresh.svg';\n\ninterface Props {\n  updating: boolean;\n  lastUpdateDate?: number; // Unix ms\n  error?: React.ReactNode;\n  className?: string;\n}\n\nexport default memo(function UpdateStatus({ updating, lastUpdateDate, error, className = '' }: Props) {\n  return (\n    <div className={`${styles.container} ${className}`}>\n      {error && (\n        <div className={styles.error}>Failed to update rates: {error}</div>\n      )}\n      <div className={styles.data}>\n        {updating && (\n          <RefreshIcon className={styles.updating} />\n        )}\n        {lastUpdateDate && (\n          <div>Rates were updated at {formatDate(new Date(lastUpdateDate), 'H:mm:ss, D MMM YYYY')}</div>\n        )}\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from 'react';\nimport { Layout } from '../components';\nimport { ExchangeForm, UpdateStatus } from '.';\n\nexport default memo(function App() {\n  return (\n    <Layout footer={<UpdateStatus />}>\n      <ExchangeForm />\n    </Layout>\n  );\n});\n","import { useRef, useLayoutEffect, useCallback } from 'react';\n\nexport function useEventCallback<T extends (...args: any[]) => any>(fn: T, dependencies: any[]): T {\n  const ref = useRef<T>((() => {\n    throw new Error('Cannot call an event handler while rendering.');\n  }) as any);\n\n  useLayoutEffect(() => {\n    ref.current = fn;\n  }, [fn, ...dependencies]);\n\n  return useCallback(((...args) => {\n    const fn = ref.current;\n    return fn(...args);\n  }) as T, [ref]);\n}\n","import React, { memo, useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { currencies, currencyRatePrecision } from '../../../constants';\nimport { ExchangeRatesBase, BalanceDictionary } from '../../../types';\nimport { ReduxState } from '../../../redux/types';\nimport * as actions from '../../../redux/actions';\nimport convert from '../../../helpers/currencyConverter';\nimport { useEventCallback } from '../../../helpers/react';\nimport { ExchangeForm } from '../../components';\n\ninterface OwnProps {\n  className?: string;\n}\n\ninterface StateProps {\n  isUpdating: boolean;\n  updateError?: string;\n  exchangeRates?: ExchangeRatesBase;\n  balance: BalanceDictionary;\n}\n\ninterface ActionProps {\n  exchange: typeof actions.exchange;\n}\n\ntype Props = OwnProps & StateProps & ActionProps;\n\ninterface LoadedProps extends Props {\n  exchangeRates: Exclude<Props['exchangeRates'], undefined>;\n}\n\ninterface AmountAndSideState {\n  amount: number | null;\n  side: 'sell' | 'buy';\n}\n\nfunction mapState(state: ReduxState): StateProps {\n  return {\n    exchangeRates: state.exchangeRates.data,\n    balance: state.balance,\n    isUpdating: state.exchangeRates.areUpdating,\n    updateError: state.exchangeRates.updateError\n  };\n}\n\nconst containerActions: ActionProps = {\n  exchange: actions.exchange\n};\n\nfunction ExchangeFormContainer(props: Props) {\n  if (props.exchangeRates) {\n    return <ExchangeFormLoadedContainer {...props} exchangeRates={props.exchangeRates} />;\n  } else if (props.isUpdating) {\n    return <ExchangeForm stage=\"loading\" className={props.className} />;\n  } else {\n    return <ExchangeForm stage=\"error\" error={props.updateError || 'Unknown error'} className={props.className} />;\n  }\n}\n\nconst ExchangeFormLoadedContainer = memo(function ExchangeFormLoadedContainer({\n  exchangeRates,\n  balance,\n  className,\n  exchange\n}: LoadedProps) {\n  // This state is not stored in the Redux state because it is too view-specific.\n  // Also such approach allows to have multiple independent forms on a page.\n  const [sellCurrency, setSellCurrency] = useState(currencies[0]);\n  const [buyCurrency, setBuyCurrency] = useState(currencies[1]);\n  const [{amount, side: amountSide}, setAmountAndSide] = useState<AmountAndSideState>({amount: null, side: 'sell'});\n\n  const sellAmount = amount === null || amountSide === 'sell'\n    ? amount\n    : convert(exchangeRates, amount, buyCurrency, sellCurrency);\n\n  const buyAmount = amount === null || amountSide === 'buy'\n    ? amount\n    : convert(exchangeRates, amount, sellCurrency, buyCurrency);\n\n  const sellBalance = balance[sellCurrency] || 0;\n  const buyBalance = balance[buyCurrency] || 0;\n\n  const isEnoughBalance =\n    (sellAmount === null || sellBalance - sellAmount >= 0) &&\n    (buyAmount === null || buyBalance + buyAmount >= 0);\n\n  const onSellAmountChange = useCallback(\n    (amount: number | null) => setAmountAndSide({ amount, side: 'sell' }),\n    [setAmountAndSide]\n  );\n\n  const onBuyAmountChange = useCallback(\n    (amount: number | null) => setAmountAndSide({ amount, side: 'buy' }),\n    [setAmountAndSide]\n  );\n\n  // Freeze the amount in the input when the user focuses it so that he can change the value without an interruption\n  // I realize that using `useEventCallback` is not a recommended pattern but passing dispatch down would break the component-container isolation\n  const onSellFocus = useEventCallback(\n    () => {\n      if (amountSide === 'buy') {\n        setAmountAndSide({ amount: sellAmount, side: 'sell' });\n      }\n    },\n    [setAmountAndSide, amountSide, sellAmount]\n  );\n\n  const onBuyFocus = useEventCallback(\n    () => {\n      if (amountSide === 'sell') {\n        setAmountAndSide({ amount: buyAmount, side: 'buy' });\n      }\n    },\n    [setAmountAndSide, amountSide, buyAmount]\n  );\n\n  const onSubmit = useEventCallback(\n    () => {\n      if (amount === null) {\n        return;\n      }\n      exchange(\n        sellCurrency,\n        amountSide === 'sell' ? amount : undefined,\n        buyCurrency,\n        amountSide === 'buy' ? amount : undefined\n      );\n      setAmountAndSide({ amount: null, side: amountSide });\n    },\n    [exchange, setAmountAndSide, sellCurrency, buyCurrency, amount, amountSide]\n  );\n\n  return (\n    <ExchangeForm\n      stage=\"ready\"\n      className={className}\n      currencies={currencies}\n      sellCurrency={sellCurrency}\n      buyCurrency={buyCurrency}\n      sellAmount={sellAmount}\n      buyAmount={buyAmount}\n      sellBalance={balance[sellCurrency] || 0}\n      buyBalance={balance[buyCurrency] || 0}\n      sellToBuyRatio={convert(exchangeRates, 1, sellCurrency, buyCurrency, currencyRatePrecision)}\n      buyToSellRatio={convert(exchangeRates, 1, buyCurrency, sellCurrency, currencyRatePrecision)}\n      canSubmit={isEnoughBalance && amount !== null}\n      validationError={!isEnoughBalance && 'Insufficient funds'}\n      onSellCurrencySelect={setSellCurrency}\n      onBuyCurrencySelect={setBuyCurrency}\n      onSellAmountChange={onSellAmountChange}\n      onBuyAmountChange={onBuyAmountChange}\n      onSellAmountFocus={onSellFocus}\n      onBuyAmountFocus={onBuyFocus}\n      onSubmit={onSubmit}\n    />\n  );\n});\n\nexport default connect(mapState, containerActions)(ExchangeFormContainer);\n","import { connect } from 'react-redux';\nimport { UpdateStatus } from '../../components';\nimport { ReduxState } from '../../../redux/types';\n\nexport default connect((state: ReduxState) => ({\n  updating: state.exchangeRates.areUpdating,\n  lastUpdateDate: state.exchangeRates.lastUpdateDate,\n  error: state.exchangeRates.updateError\n}))(UpdateStatus);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { createAppStore } from './redux';\nimport { floatRatesComRatesSource } from './services/exchangeRatesSource';\nimport { App } from './view/containers';\n\nconst appStore = createAppStore({\n  fetchExchangeRates: floatRatesComRatesSource\n});\n\nReactDOM.render(\n  <Provider store={appStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga'\nimport appReducer from './reducers';\nimport appSaga from './sagas';\nimport * as actions from './actions';\nimport { SagasDependencies } from './types';\n\nfunction createAppStore(dependencies: SagasDependencies) {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(appReducer, composeWithDevTools(\n    applyMiddleware(sagaMiddleware)\n  ));\n\n  sagaMiddleware.run(appSaga, dependencies);\n\n  return store;\n}\n\nexport { createAppStore, actions };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UpdateStatus_container__1VvHf\",\"error\":\"UpdateStatus_error__3dv-a\",\"data\":\"UpdateStatus_data__3b-kI\",\"updating\":\"UpdateStatus_updating__2IfGK\",\"rotate\":\"UpdateStatus_rotate__3jfQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Layout_body__1ITRR\",\"main\":\"Layout_main__2B45d\",\"footer\":\"Layout_footer__t1rBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ExchangeFormHalf_box__1iLS-\",\"control\":\"ExchangeFormHalf_control__3fd5Y\",\"info\":\"ExchangeFormHalf_info__1Cnxj\",\"currencySelectBox\":\"ExchangeFormHalf_currencySelectBox__1KFtw\",\"currencySelect\":\"ExchangeFormHalf_currencySelect__uWCxX\",\"amountInput\":\"ExchangeFormHalf_amountInput__1R298\",\"unit\":\"ExchangeFormHalf_unit__GPnzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ExchangeForm_form__3xtVM\",\"message\":\"ExchangeForm_message__35ZrD\",\"arrow\":\"ExchangeForm_arrow__2u9a2\",\"side\":\"ExchangeForm_side__1BJsW\",\"buttonSection\":\"ExchangeForm_buttonSection__3Hspk\",\"button\":\"ExchangeForm_button__2H-OB\",\"validationError\":\"ExchangeForm_validationError__qpyGY\"};"],"sourceRoot":""}